@startuml ClassDiagram

title Lesson Booking System - Class Diagram

class Organization {
  + string name
  + addLocation(Location location)
}

class City {
  + int cityId <<PK>>
  + string name
}

class Location {
  + int locationId <<PK>>
  + string name
  + string address
  + getAvailableOfferings()
}

class Schedule {
  + int scheduleId <<PK>>
}

class TimeSlot {
  + int timeSlotId <<PK>>
  + DateTime startTime
  + DateTime endTime
  + DateTime startDate
  + DateTime endDate
}

abstract class Account {
  + int accountId <<PK>>
  + string name
  + string phoneNumber
  + register()
  + login()
}

class Instructor {
  + string Specialization
  + viewOfferings()
  + takeOffering(Offering offering)
}

class Offering {
  + int OfferingId <<PK>>
  + string mode  -- 'private' or 'group'
  + string lessonType
  + bool isAvailable
  + assignInstructor(Instructor instructor)
  + markAsAvailable()
}

class Client {
  + DateTime dateOfBirth
  + makeBooking(Offering offering)
  + viewBookings()
  + cancelBooking(Booking booking)
}

class Guardian {
  + handleBooking(Offering offering)
}

class Administrator {
  + string name
  + createOffering(Offering offering)
  + deleteAccount(Account account)
  + viewAllRecords()
}


class Booking {
  + int bookingId <<PK>>
  + DateTime bookingDate
  + cancel()
}

Account <|-- Instructor
Account <|-- Client
Account <|-- Guardian

Organization "1" --> "*" Location : owns

Location "1" --> "1" Schedule : has

Schedule "1" --> "*" TimeSlot : includes

Location "1" --> "1" City : located\_in

Instructor "*" --> "*" City : available\_in

Instructor "*" --> "*" Offering : takes\_on

Offering "1" --> "0..1" Instructor : assigned\_to

Offering "1" --> "1" Location : occurs\_at

Offering "1" --> "1" TimeSlot : scheduled\_at

Client "1" --> "*" Booking : makes

Booking "1" --> "1" Offering : for

Client "0..1" --> "1" Guardian : has

Guardian "1" --> "*" Client : acts\_for

Administrator "1" --> "*" Offering : creates

Administrator "1" --> "*" Account : can\_delete

@enduml